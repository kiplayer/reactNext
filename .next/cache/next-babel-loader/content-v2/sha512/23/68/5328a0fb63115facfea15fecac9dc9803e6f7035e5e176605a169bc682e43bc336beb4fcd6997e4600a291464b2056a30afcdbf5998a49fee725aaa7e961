{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\KIPLAYER\\\\Desktop\\\\Git\\\\reactNext\\\\pages\\\\class_fetch.js\";\nimport { useEffect, useState } from 'react';\nexport default function Class_fetch() {\n  const {\n    0: days,\n    1: setDays\n  } = useState([]);\n  const {\n    0: words,\n    1: setWords\n  } = useState([]);\n  useEffect(() => {\n    fetch('/data.json').then(res => {\n      return res.json();\n    }).then(data => {\n      console.log(data);\n      setDays(data.days);\n      setWords(data.words);\n    });\n  }, []);\n  console.log(days);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Fetch()\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"tabBar\",\n      children: days.map(day => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: '/day/' + day.day,\n          children: [\"Day \", day.day]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 7\n        }, this)\n      }, day.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: words.map(word => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: word.eng\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: word.kor\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 8\n          }, this)]\n        }, word.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 7\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"sources":["C:/Users/KIPLAYER/Desktop/Git/reactNext/pages/class_fetch.js"],"names":["useEffect","useState","Class_fetch","days","setDays","words","setWords","fetch","then","res","json","data","console","log","map","day","id","word","eng","kor"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,eAAe,SAASC,WAAT,GAAuB;AACrC,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBH,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAA,OAACI,KAAD;AAAA,OAAQC;AAAR,MAAoBL,QAAQ,CAAC,EAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACfO,IAAAA,KAAK,CAAC,YAAD,CAAL,CACEC,IADF,CACOC,GAAG,IAAI;AACZ,aAAOA,GAAG,CAACC,IAAJ,EAAP;AACA,KAHF,EAIEF,IAJF,CAIOG,IAAI,IAAI;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAP,MAAAA,OAAO,CAACO,IAAI,CAACR,IAAN,CAAP;AACAG,MAAAA,QAAQ,CAACK,IAAI,CAACN,KAAN,CAAR;AACA,KARF;AASA,GAVQ,EAUN,EAVM,CAAT;AAWAO,EAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;AAEA,sBACC;AAAA,4BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAI,MAAA,SAAS,EAAE,QAAf;AAAA,gBACEA,IAAI,CAACW,GAAL,CAASC,GAAG,iBACZ;AAAA,+BACC;AAAG,UAAA,IAAI,EAAE,UAAQA,GAAG,CAACA,GAArB;AAAA,6BAA+BA,GAAG,CAACA,GAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AADD,SAASA,GAAG,CAACC,EAAb;AAAA;AAAA;AAAA;AAAA,cADA;AADF;AAAA;AAAA;AAAA;AAAA,YAFD,eASC;AAAA,6BACC;AAAA,kBACEX,KAAK,CAACS,GAAN,CAAUG,IAAI,iBACd;AAAA,kCACC;AAAA,sBAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,kBADD,eAEC;AAAA,sBAAKD,IAAI,CAACE;AAAV;AAAA;AAAA;AAAA;AAAA,kBAFD;AAAA,WAASF,IAAI,CAACD,EAAd;AAAA;AAAA;AAAA;AAAA,gBADA;AADF;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YATD;AAAA,kBADD;AAsBA","sourcesContent":["import { useEffect, useState } from 'react';\r\n\r\nexport default function Class_fetch() {\r\n\tconst [days, setDays] = useState([]);\r\n\tconst [words, setWords] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tfetch('/data.json')\r\n\t\t\t.then(res => {\r\n\t\t\t\treturn res.json();\r\n\t\t\t})\r\n\t\t\t.then(data => {\r\n\t\t\t\tconsole.log(data);\r\n\t\t\t\tsetDays(data.days);\r\n\t\t\t\tsetWords(data.words);\r\n\t\t\t});\r\n\t}, []);\r\n\tconsole.log(days);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h2>Fetch()</h2>\r\n\t\t\t<ul className={\"tabBar\"}>\r\n\t\t\t\t{days.map(day => (\r\n\t\t\t\t\t<li key={day.id}>\r\n\t\t\t\t\t\t<a href={'/day/'+day.day}>Day {day.day}</a>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t))}\r\n\t\t\t</ul>\r\n\t\t\t<table>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{words.map(word => (\r\n\t\t\t\t\t\t<tr key={word.id}>\r\n\t\t\t\t\t\t\t<td>{word.eng}</td>\r\n\t\t\t\t\t\t\t<td>{word.kor}</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t</>\r\n\t);\r\n}"]},"metadata":{},"sourceType":"module"}