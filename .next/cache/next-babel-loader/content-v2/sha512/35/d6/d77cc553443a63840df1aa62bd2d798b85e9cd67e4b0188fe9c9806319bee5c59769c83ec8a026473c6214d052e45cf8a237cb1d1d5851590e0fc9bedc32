{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\KIPLAYER\\\\Desktop\\\\Git\\\\reactNext\\\\src\\\\component\\\\DayView.js\";\n\n/* Dummy 사용 */\nimport dummy from \"../db/data.json\";\nexport default function DayView(props) {\n  var _this = this;\n\n  var selectDay = props.day;\n  var wordList = dummy.words.filter(function (word) {\n    return word.day == selectDay;\n  });\n  console.log(dummy.words);\n  console.log(wordList);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: wordList.map(function (word) {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: word.eng\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 8\n            }, _this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: word.kor\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 8\n            }, _this)]\n          }, word.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 7\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n}\n/* Custom Hooks\r\nimport { useEffect, useState } from 'react';\r\nimport useFetch from '../../src/hooks/useFetch';\r\n\r\nexport default function DayList(props) {\r\n\tconst selectDay = props.day;\r\n\tconst wordList = useFetch(\"http://kimkeun.com:4000/words.json?day=\"+selectDay);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<table>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{wordList.map(word => (\r\n\t\t\t\t\t\t<tr key={word.id}>\r\n\t\t\t\t\t\t\t<td>{word.eng}</td>\r\n\t\t\t\t\t\t\t<td>{word.kor}</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t</>\r\n\t);\r\n}\r\n*/\n\n_c = DayView;\n\nvar _c;\n\n$RefreshReg$(_c, \"DayView\");","map":{"version":3,"sources":["C:/Users/KIPLAYER/Desktop/Git/reactNext/src/component/DayView.js"],"names":["dummy","DayView","props","selectDay","day","wordList","words","filter","word","console","log","map","eng","kor","id"],"mappings":";;;;AAAA;AACA,OAAOA,KAAP,MAAkB,iBAAlB;AAEA,eAAe,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACtC,MAAMC,SAAS,GAAGD,KAAK,CAACE,GAAxB;AACA,MAAMC,QAAQ,GAAGL,KAAK,CAACM,KAAN,CAAYC,MAAZ,CAAmB,UAAAC,IAAI;AAAA,WAAIA,IAAI,CAACJ,GAAL,IAAYD,SAAhB;AAAA,GAAvB,CAAjB;AAEAM,EAAAA,OAAO,CAACC,GAAR,CAAYV,KAAK,CAACM,KAAlB;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AAEA,sBACC;AAAA,2BACC;AAAA,6BACC;AAAA,kBACEA,QAAQ,CAACM,GAAT,CAAa,UAAAH,IAAI;AAAA,8BACjB;AAAA,oCACC;AAAA,wBAAKA,IAAI,CAACI;AAAV;AAAA;AAAA;AAAA;AAAA,qBADD,eAEC;AAAA,wBAAKJ,IAAI,CAACK;AAAV;AAAA;AAAA;AAAA;AAAA,qBAFD;AAAA,aAASL,IAAI,CAACM,EAAd;AAAA;AAAA;AAAA;AAAA,mBADiB;AAAA,SAAjB;AADF;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD,mBADD;AAcA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;KA9CwBb,O","sourcesContent":["/* Dummy 사용 */\r\nimport dummy from \"../db/data.json\";\r\n\r\nexport default function DayView(props) {\r\n\tconst selectDay = props.day;\r\n\tconst wordList = dummy.words.filter(word => word.day == selectDay);\r\n\r\n\tconsole.log(dummy.words);\r\n\tconsole.log(wordList);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<table>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{wordList.map(word => (\r\n\t\t\t\t\t\t<tr key={word.id}>\r\n\t\t\t\t\t\t\t<td>{word.eng}</td>\r\n\t\t\t\t\t\t\t<td>{word.kor}</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\n/* Custom Hooks\r\nimport { useEffect, useState } from 'react';\r\nimport useFetch from '../../src/hooks/useFetch';\r\n\r\nexport default function DayList(props) {\r\n\tconst selectDay = props.day;\r\n\tconst wordList = useFetch(\"http://kimkeun.com:4000/words.json?day=\"+selectDay);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<table>\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{wordList.map(word => (\r\n\t\t\t\t\t\t<tr key={word.id}>\r\n\t\t\t\t\t\t\t<td>{word.eng}</td>\r\n\t\t\t\t\t\t\t<td>{word.kor}</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</tbody>\r\n\t\t\t</table>\r\n\t\t</>\r\n\t);\r\n}\r\n*/"]},"metadata":{},"sourceType":"module"}